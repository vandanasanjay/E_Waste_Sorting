{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <title>Teachable Machine Model Test</title>\
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>\
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image"></script>\
</head>\
<body>\
    <h2>Teachable Machine Model Test</h2>\
    <video id="webcam" autoplay playsinline width="224" height="224"></video>\
    <p id="result">Loading...</p>\
\
    <script type="text/javascript">\
        const URL = "./"; // Update to point to the folder with your model files\
\
        let model, webcam;\
\
        async function init() \{\
            model = await tmImage.load(URL + "model.json", URL + "metadata.json");\
            webcam = new tmImage.Webcam(224, 224, true); // Flip the webcam\
            await webcam.setup();\
            await webcam.play();\
            document.getElementById("webcam").appendChild(webcam.canvas);\
            window.requestAnimationFrame(loop);\
        \}\
\
        async function loop() \{\
            webcam.update();\
            await predict();\
            window.requestAnimationFrame(loop);\
        \}\
\
        async function predict() \{\
            const predictions = await model.predict(webcam.canvas);\
            let highestPrediction = predictions[0];\
            for (let prediction of predictions) \{\
                if (prediction.probability > highestPrediction.probability) \{\
                    highestPrediction = prediction;\
                \}\
            \}\
            document.getElementById("result").innerText = `Result: $\{highestPrediction.className\} ($\{(highestPrediction.probability * 100).toFixed(2)\}%)`;\
        \}\
\
        init();\
    </script>\
</body>\
</html>\
}